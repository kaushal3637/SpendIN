const accountAbi = [
    { inputs: [], name: "ECDSAInvalidSignature", type: "error" },
    { inputs: [{ internalType: "uint256", name: "length", type: "uint256" }], name: "ECDSAInvalidSignatureLength", type: "error" },
    { inputs: [{ internalType: "bytes32", name: "s", type: "bytes32" }], name: "ECDSAInvalidSignatureS", type: "error" },
    { inputs: [{ internalType: "uint256", name: "index", type: "uint256" }, { internalType: "bytes", name: "error", type: "bytes" }], name: "ExecuteError", type: "error" },
    { stateMutability: "payable", type: "fallback" },
    { inputs: [], name: "entryPoint", outputs: [{ internalType: "contract IEntryPoint", name: "", type: "address" }], stateMutability: "pure", type: "function" },
    { inputs: [{ internalType: "address", name: "target", type: "address" }, { internalType: "uint256", name: "value", type: "uint256" }, { internalType: "bytes", name: "data", type: "bytes" }], name: "execute", outputs: [], stateMutability: "nonpayable", type: "function" },
    { inputs: [{ components: [{ internalType: "address", name: "target", type: "address" }, { internalType: "uint256", name: "value", type: "uint256" }, { internalType: "bytes", name: "data", type: "bytes" }], internalType: "struct BaseAccount.Call[]", name: "calls", type: "tuple[]" }], name: "executeBatch", outputs: [], stateMutability: "nonpayable", type: "function" },
    { inputs: [], name: "getNonce", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" },
    { inputs: [{ internalType: "bytes32", name: "hash", type: "bytes32" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "isValidSignature", outputs: [{ internalType: "bytes4", name: "magicValue", type: "bytes4" }], stateMutability: "view", type: "function" },
    { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }, { internalType: "uint256[]", name: "", type: "uint256[]" }, { internalType: "uint256[]", name: "", type: "uint256[]" }, { internalType: "bytes", name: "", type: "bytes" }], name: "onERC1155BatchReceived", outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }], stateMutability: "nonpayable", type: "function" },
    { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }, { internalType: "uint256", name: "", type: "uint256" }, { internalType: "uint256", name: "", type: "uint256" }, { internalType: "bytes", name: "", type: "bytes" }], name: "onERC1155Received", outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }], stateMutability: "nonpayable", type: "function" },
    { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }, { internalType: "uint256", name: "", type: "uint256" }, { internalType: "bytes", name: "", type: "bytes" }], name: "onERC721Received", outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }], stateMutability: "nonpayable", type: "function" },
    { inputs: [{ internalType: "bytes4", name: "id", type: "bytes4" }], name: "supportsInterface", outputs: [{ internalType: "bool", name: "", type: "bool" }], stateMutability: "pure", type: "function" },
    { inputs: [{ components: [{ internalType: "address", name: "sender", type: "address" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "bytes", name: "initCode", type: "bytes" }, { internalType: "bytes", name: "callData", type: "bytes" }, { internalType: "bytes32", name: "accountGasLimits", type: "bytes32" }, { internalType: "uint256", name: "preVerificationGas", type: "uint256" }, { internalType: "bytes32", name: "gasFees", type: "bytes32" }, { internalType: "bytes", name: "paymasterAndData", type: "bytes" }, { internalType: "bytes", name: "signature", type: "bytes" }], internalType: "struct PackedUserOperation", name: "userOp", type: "tuple" }, { internalType: "bytes32", name: "userOpHash", type: "bytes32" }, { internalType: "uint256", name: "missingAccountFunds", type: "uint256" }], name: "validateUserOp", outputs: [{ internalType: "uint256", name: "validationData", type: "uint256" }], stateMutability: "nonpayable", type: "function" },
    { stateMutability: "payable", type: "receive" }
] as const;

export default accountAbi;

